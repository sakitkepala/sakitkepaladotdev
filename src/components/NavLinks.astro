---
const isHome = Astro.url.pathname === "/";

const checkCurrentPage = (path: string) => {
  const targetPath = import.meta.env.DEV ? path : `${path}/`;
  return Astro.url.pathname === targetPath;
};
---

<nav class="navigation-menu">
  {
    !isHome && (
      <a href="/" class="nav-link home" title="Kembali ke halaman depan">
        depan
      </a>
    )
  }
  <a
    href="/dika"
    class:list={["nav-link", { "current-page": checkCurrentPage("/dika") }]}
    title="Ke halaman tentang Dika">dika</a
  >
  <a
    href="/tulisan"
    class:list={["nav-link", { "current-page": checkCurrentPage("/tulisan") }]}
    title="Ke halaman tulisan blog">tulisan</a
  >
  <a
    href="/karya"
    class:list={["nav-link", { "current-page": checkCurrentPage("/karya") }]}
    title="Ke halaman karya-karya projek">karya</a
  >
</nav>

<style>
  .navigation-menu {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    column-gap: 1rem;

    font-size: 3.5rem;
    text-align: center;
  }

  @media screen and (min-width: 425px) {
    .navigation-menu {
      flex-direction: row;
      justify-content: flex-end;
      flex-wrap: wrap;
      align-items: baseline;

      font-size: 28px;
      text-align: right;
    }
  }

  @media screen and (min-width: 512px) {
    .navigation-menu {
      margin-block: 0.5rem;
    }
  }

  @media screen and (min-width: 768px) {
    .navigation-menu {
      margin-inline: 1rem;
    }
  }

  .nav-link.home::before {
    content: "‚Üê";
    text-decoration: none;
  }

  .nav-link:not(.home):not(.current-page)::before {
    content: "/";
    text-decoration: none;
  }

  .nav-link:hover,
  .nav-link.current-page {
    text-decoration: none;
  }
</style>
